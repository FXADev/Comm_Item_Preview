name: Nightly ETL Process

on:
  schedule:
    # Run at 5:00 AM EST (9:00 UTC)
    - cron: '0 9 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  run-etl:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.lock
        
    - name: Install SQL Server ODBC Driver
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -
        curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list | sudo tee /etc/apt/sources.list.d/mssql-release.list
        sudo apt-get update
        sudo ACCEPT_EULA=Y apt-get install -y msodbcsql18
        sudo ACCEPT_EULA=Y apt-get install -y mssql-tools18
        echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
        
    - name: Set workflow information
      run: |
        echo "startTime=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
        echo "repository=${{ github.repository }}" >> $GITHUB_ENV
        echo "branch=${{ github.ref_name }}" >> $GITHUB_ENV

    - name: Run ETL process
      env:
        # Use GitHub secrets for all credentials
        REDSHIFT_HOST: ${{ secrets.REDSHIFT_HOST }}
        REDSHIFT_PORT: ${{ secrets.REDSHIFT_PORT }}
        REDSHIFT_DATABASE: ${{ secrets.REDSHIFT_DATABASE }}
        REDSHIFT_USER: ${{ secrets.REDSHIFT_USER }}
        REDSHIFT_PASSWORD: ${{ secrets.REDSHIFT_PASSWORD }}
        REDSHIFT_SCHEMA: ${{ secrets.REDSHIFT_SCHEMA }}
        SF_USERNAME: ${{ secrets.SF_USERNAME }}
        SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SF_SECURITY_TOKEN: ${{ secrets.SF_SECURITY_TOKEN }}
        SQL_SERVER: ${{ secrets.SQL_SERVER }}
        SQL_DATABASE: ${{ secrets.SQL_DATABASE }}
        SQL_USERNAME: ${{ secrets.SQL_USERNAME }}
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        SQL_DRIVER: ${{ secrets.SQL_DRIVER }}
      run: |
        python etl_main.py
        
    - name: Record end time
      run: echo "endTime=$(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV
        
    - name: Generate ETL metrics for email
      if: success()
      run: |
        # Ensure metrics directory exists
        mkdir -p metrics
        python scripts/generate_email_metrics.py --output email_metrics.html
        
    - name: Check for metrics file
      if: success()
      run: |
        if [ -f email_metrics.html ]; then
          echo "metrics_exist=true" >> $GITHUB_ENV
        else
          echo "metrics_exist=false" >> $GITHUB_ENV
        fi
        
    # Send email notification on successful completion of the ETL process
    - name: Notify on success
      if: success()
      uses: dawidd6/action-send-mail@v3
      with:
        # Gmail SMTP configuration
        server_address: smtp.gmail.com
        server_port: 465
        secure: true
        # Use the exact secret names created in GitHub
        username: ${{ secrets.smtp_username }}
        password: ${{ secrets.smtp_password }}
        subject: "✅ Commission Preview ETL Success (${{ env.total_queried || 'N/A' }} rows processed)"
        body: |
          ## ✅ Commission Preview ETL Success
          
          The nightly ETL process completed successfully.
          
          **Repository:** ${{ env.repository }}
          **Branch:** ${{ env.branch }}
          **Start time:** ${{ env.startTime }}
          **End time:** ${{ env.endTime }}
          
          {% if env.metrics_exist == 'true' %}
          ### ETL Metrics Summary
          - **Total Rows Queried:** ${{ env.total_queried || 'N/A' }}
          - **Total Rows Inserted:** ${{ env.total_inserted || 'N/A' }}
          
          Detailed metrics table is included below.
          {% endif %}
          
          ### View the full run details:
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        # Send emails to all recipients in the notification list
        to: ${{ secrets.NOTIFICATION_EMAILS }}
        from: Commission ETL <noreply@bridgepointetechnologies.com>
        convert_markdown: true
        priority: high
        attachments: |
          {% if env.metrics_exist == 'true' %}
          email_metrics.html
          {% endif %}
        
    # Send email notification when ETL process fails
    - name: Notify on failure
      if: failure()
      uses: dawidd6/action-send-mail@v3
      with:
        # Gmail SMTP configuration
        server_address: smtp.gmail.com
        server_port: 465
        secure: true
        # Use the exact secret names created in GitHub
        username: ${{ secrets.smtp_username }}
        password: ${{ secrets.smtp_password }}
        subject: "⚠️ Commission Preview ETL Failure"
        body: |
          ## ⚠️ Commission Preview ETL Failure
          
          The nightly ETL process failed.
          
          **Repository:** ${{ env.repository }}
          **Branch:** ${{ env.branch }}
          **Start time:** ${{ env.startTime }}
          **End time:** ${{ env.endTime }}
          
          ### Error Information
          Please check the GitHub Actions logs for detailed error messages.
          
          ### View the full run details:
          https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        # Send emails to all recipients in the notification list
        to: ${{ secrets.NOTIFICATION_EMAILS }}
        from: Commission ETL <noreply@bridgepointetechnologies.com>
        convert_markdown: true
        priority: high
